// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String    @unique @db.Citext
  displayName String
  role  UserRoles @relation(fields: [roleId], references: [id])
  roleId Int
  status UserStatuses @relation(fields: [statusId], references: [id])
  statusId Int
  swatches Swatches[]
}

model UserRoles {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  label String @unique
  users Users[]
}

model UserStatuses {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  label String @unique
  users Users[]
}

model Swatches {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean @default(false)
  author Users @relation(fields: [authorId], references: [id])
  authorId Int
  slug String @unique
}

// swatches [
// 	{
// 		id: 1,
// 		slug: 'some-autogenerated-unique-slug', // slug/string - required
// 		published: false // boolean - required - default false
// 		author_id: 1 // foreign key - users
// 		paint_id: 1 // foreign key - paints
// 		tags: [],
// 		swatch_cards: [],
// 	}
// ]

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }
